@model List<Fruit>
@{
    int sn = 1;
}
<div class="d-flex justify-content-between  align-items-center">
    <h2>Add Fruits</h2>
    <button id="addFruit" class="btn btn-success text-whit">Add Fruit</button>
</div>
<div id="fruitContainer">
    <form method="post" asp-controller="Fruit" asp-action="Create" id="fruitForm">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th></th>
                    <th>Sno.</th>
                    <th>Name</th>
                    <th>Price</th>
                    <th>Season</th>
                    <th>Category</th>
                </tr>
            </thead>
            <tbody id="fruitBody">
                @foreach (var fruit in Model)
                {
                    <tr>
                        <td><input type="checkbox" class="selectCheckbox" name="Fruits[@sn].IsChecked" value="true"/></td>
                        <td>
                            @(sn)<input name="Fruits.index" value="@(sn)" hidden/>
                        </td>
                        <td><input type="text" value="@(fruit.Name)" name="Fruits[@sn].Name" /></td>
                        <td><input type="number" value="@(fruit.Price)" name="Fruits[@sn].Price" /></td>
                        <td>
                            <select name="Fruits[@sn].HarvestSeason">
                                @foreach (var season in Enum.GetValues(typeof(Fruit.Season)))
                                {
                                    var fruitSeason = (int)season;
                                    var isSelected = (int)fruit.HarvestSeason == fruitSeason ? "selected" : null;
                                    <option selected="@isSelected">@season</option>
                                }
                            </select>
                        </td>
                        <td>
                            <select name="Fruits[@sn].Categories">
                                @foreach (var category in Enum.GetValues(typeof(Fruit.FruitCategory)))
                                {
                                    var fruitCategory = (int)category;
                                    var isSelected = (int)fruit.Categories == fruitCategory ? "selected" : null;
                                    <option selected="@isSelected">@category</option>
                                }
                            </select>
                        </td>
                        <td><input type="text" name="Fruits[@sn].Id" value="@(fruit.Id)" hidden/></td>
                        <input value="@(sn++)" hidden/>
                    </tr>
                }
            </tbody>
        </table>
        <button type="submit" class="btn btn-primary">Save</button>
        <button type="submit" class="btn btn-danger" id="deleteButton">Delete</button>
    </form>
</div>


@section Scripts
{
    <script>
        $(document).ready(function () {
            function getMaxSno() {
                var maxCount = 0;
                $('#fruitBody tr').each(function () {
                    var count = parseInt($(this).find("td:nth-child(2)").text());
                    if (count > maxCount) {
                        maxCount = count;
                    }
                });
                return maxCount;
            }

            $("#deleteButton").click(function () {
                $("#fruitForm").removeAttr("action");
                $("#fruitForm").attr("action", "@Url.Action("Delete" )");
                $("#fruitForm").submit();
            });

            function updateSnoAfter(deletedSno) {
                $('#fruitBody tr').each(function () {
                    var currentSno = parseInt($(this).find("td:nth-child(2)").text());
                    if (currentSno > deletedSno) {
                        $(this).find("td:nth-child(2)").text(currentSno - 1);
                    }
                })
            }

            $(document).on("click", '.deleteAddedRow', function () {
                var deletedSno = parseInt($(this).closest('tr').find("td:nth-child(2)").text());
                $(this).closest('tr').remove();
                updateSnoAfter(deletedSno);
            });

            $("#addFruit").click(function () {
                var count = getMaxSno() + 1;
                var inputFields = `<tr>
                                                <td></td>
                                                <td>${count}
                                                <input name="Fruits.index" value="${count}" hidden/>
                                                </td>
                                                <td><input type="text" placeholder="enter your name" name="Fruits[${count}].Name"/></td>
                                                <td><input type="number" placeholder="enter price" name="Fruits[${count}].Price"/></td>
                                                <td>
                                                <select name = "Fruits[${count}].HarvestSeason">
        @foreach (var season in Enum.GetValues(typeof(Fruit.Season)))
        {
                                                                    <option>@(season)</option>
        }
                                                </select>
                                                </td>
                                                <td>
                                                <select name="Fruits[${count}].Categories">
        @foreach (var category in Enum.GetValues(typeof(Fruit.FruitCategory)))
        {
                                                                    <option>@(category)</option>
        }
                                                </select>
                                                </td>
                                                        <td class="text-danger"><p style="cursor:pointer;" class="deleteAddedRow">X</p></td>
                                                            </tr>`
                $("#fruitBody").append(inputFields);
            });
        });
    </script>
}